{"ast":null,"code":"var _jsxFileName = \"/Applications/js_project/Todo_Task/frontend/src/components/DrfApiFetch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrfApiFetch = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selecetedTask, setSelected] = useState([]);\n  const [id, setId] = useState(1);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/tasks/', {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setTasks(data);\n    });\n  }, []);\n  const getTask = () => {\n    fetch(`http://127.0.0.1:8000/api/tasks/${id}/`, {\n      method: 'GET'\n    }).then(res => res.json()).then(data => {\n      setSelected(data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" \", task.id]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \"Set id \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: evt => {\n        setId(evt.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => getTask(),\n      children: \"Get Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [selectedTask.title, \" \", selectedTask.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DrfApiFetch, \"7IuZChLF49/hwCr89ibly+d0BJ0=\");\n_c = DrfApiFetch;\nexport default DrfApiFetch;\nvar _c;\n$RefreshReg$(_c, \"DrfApiFetch\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DrfApiFetch","_s","tasks","setTasks","selecetedTask","setSelected","id","setId","fetch","method","then","res","json","data","getTask","children","map","task","title","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","evt","target","onClick","selectedTask","_c","$RefreshReg$"],"sources":["/Applications/js_project/Todo_Task/frontend/src/components/DrfApiFetch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst DrfApiFetch = () => {\n\n  const [tasks, setTasks] = useState([]);\n  const [selecetedTask, setSelected] = useState([])\n  const [id, setId] = useState(1)\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/tasks/', {method: 'GET'})\n    .then(res => res.json())\n    .then(data => {setTasks(data)})\n  },[]);\n\n  const getTask = () => {\n    fetch(`http://127.0.0.1:8000/api/tasks/${id}/`, {method: 'GET'})\n    .then(res => res.json())\n    .then(data => {setSelected(data)})\n  }\n\n  return (\n    <div>\n      <ul>\n        {\n          tasks.map(task => <li key={task.id}>{task.title} {task.id}</li>)\n        }\n      </ul>\n\n      Set id <br/>\n      <input type='text' value={id} onChange={evt=>{setId(evt.target.value)}}/>\n      <br/>\n      <button type='button' onClick={()=>getTask()}>Get Task</button>\n      <h3>{selectedTask.title} {selectedTask.id}</h3>\n      \n    </div>\n  )\n}\n\nexport default DrfApiFetch\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,aAAa,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACW,EAAE,EAAEC,KAAK,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,kCAAkC,EAAE;MAACC,MAAM,EAAE;IAAK,CAAC,CAAC,CACzDC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MAACV,QAAQ,CAACU,IAAI,CAAC;IAAA,CAAC,CAAC;EACjC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBN,KAAK,CAAE,mCAAkCF,EAAG,GAAE,EAAE;MAACG,MAAM,EAAE;IAAK,CAAC,CAAC,CAC/DC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MAACR,WAAW,CAACQ,IAAI,CAAC;IAAA,CAAC,CAAC;EACpC,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAEIb,KAAK,CAACc,GAAG,CAACC,IAAI,iBAAIlB,OAAA;QAAAgB,QAAA,GAAmBE,IAAI,CAACC,KAAK,EAAC,GAAC,EAACD,IAAI,CAACX,EAAE;MAAA,GAA9BW,IAAI,CAACX,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhE,CAAC,WAEE,eAAAvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAElB,EAAG;MAACmB,QAAQ,EAAEC,GAAG,IAAE;QAACnB,KAAK,CAACmB,GAAG,CAACC,MAAM,CAACH,KAAK,CAAC;MAAA;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzEvB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLvB,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAEA,CAAA,KAAId,OAAO,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DvB,OAAA;MAAAgB,QAAA,GAAKc,YAAY,CAACX,KAAK,EAAC,GAAC,EAACW,YAAY,CAACvB,EAAE;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE5C,CAAC;AAEV,CAAC;AAAArB,EAAA,CAlCKD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAoCjB,eAAeA,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}